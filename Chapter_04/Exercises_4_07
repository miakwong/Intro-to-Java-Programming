/*(Corner point coordinates) Suppose a pentagon is centered at (0, 0) with one point
at the 0 oâ€™clock position, as shown in Figure 4.4c. Write a program that prompts
the user to enter the radius of the bounding circle of a pentagon and displays the
coordinates of the five corner points on the pentagon from p1 to p5 in this order. Use
console format to display two digits after the decimal point.*/

import java.util.Scanner;

public class P0917to19_0927{

	public static void main(String[] args) {
			Scanner in = new Scanner(System.in);
		
		//prompt the user to enter
		System.out.print("Enter the radius of the bounding circle: ");
		double radius = in.nextDouble();
		
		//calculate p1 and p3 coordinates
		double x1 = radius * Math.cos( Math.PI * (1 / 2.0 - 2 / 5.0) );
		double x3 = -x1;
		double y1 = radius * Math.sin( Math.PI * (1 / 2.0 - 2 / 5.0) );
		double y3 = y1;
		
		//calculate p2
		double x2 = 0;
		double y2 = radius;
		
		//calculate p4 and p5 coordinates
		double x4 = radius * Math.cos( Math.PI * ( (-1 - 2 / 5.0) / 2.0 ) ); 
		double x5 = -x4;
		double y4 = radius * Math.sin( Math.PI * ( (-1 - 2 / 5.0) / 2.0 ) );  
		double y5 = y4;
		
		System.out.println("The coordinates of five points on the pentagon are");
		System.out.printf("(%.2f, %.2f)\n", x1, y1);
		System.out.printf("(%.2f, %.2f)\n", x2, y2);
		System.out.printf("(%.2f, %.2f)\n", x3, y3);
		System.out.printf("(%.2f, %.2f)\n", x4, y4);
		System.out.printf("(%.2f, %.2f)\n", x5, y5);
		
	}
}	  
